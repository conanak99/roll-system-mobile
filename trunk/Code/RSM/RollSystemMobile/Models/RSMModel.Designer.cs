//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RSMModel", "AttendanceLog_LogImage_FK1", "AttendanceLog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.AttendanceLog), "LogImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.LogImage), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "LogType_AttendanceLog_FK1", "LogType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.LogType), "AttendanceLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.AttendanceLog), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_Class_Major", "Major", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Major), "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Class), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "User_Instructor_FK1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RollSystemMobile.Models.User), "Instructor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Instructor), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "Role_User_FK1", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.User), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "User_Staff_FK1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RollSystemMobile.Models.User), "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Staff), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "SubjectMajorMapping", "Major", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Major), "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Subject))]
[assembly: EdmRelationshipAttribute("RSMModel", "AttendanceLog_StudentAttendance_FK1", "AttendanceLog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.AttendanceLog), "StudentAttendance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.StudentAttendance), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_StudySession_Class", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Class), "StudySession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.StudySession), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_StudySession_Instructor", "Instructor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Instructor), "StudySession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.StudySession), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_Instructor_SubjectType", "SubjectType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.SubjectType), "Instructor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Instructor), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_Subject_SubjectType", "SubjectType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.SubjectType), "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Subject), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "RollCall_AttendanceLog_FK1", "RollCall", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.RollCall), "AttendanceLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.AttendanceLog), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_RollCall_Class", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Class), "RollCall", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.RollCall), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_RollCall_Instructor", "Instructor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Instructor), "RollCall", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.RollCall), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_RollCall_Semester", "Semester", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Semester), "RollCall", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.RollCall), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_RollCall_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Subject), "RollCall", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.RollCall), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_StudySession_RollCall", "RollCall", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.RollCall), "StudySession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.StudySession), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "Class_Student_FK1", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RollSystemMobile.Models.Class), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Student), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "Student_StudentAttendance_FK1", "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Student), "StudentAttendance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.StudentAttendance), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "Student_StudentImage_FK1", "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Student), "StudentImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.StudentImage), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "User_Student_FK1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RollSystemMobile.Models.User), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Student), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "StudentInRollCall", "RollCall", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.RollCall), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Student))]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_Request_Student", "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Student), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Request), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_Request_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RollSystemMobile.Models.User), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.Request), true)]
[assembly: EdmRelationshipAttribute("RSMModel", "FK_RequestImage_Request", "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RollSystemMobile.Models.Request), "RequestImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RollSystemMobile.Models.RequestImage), true)]

#endregion

namespace RollSystemMobile.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RSMEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RSMEntities object using the connection string found in the 'RSMEntities' section of the application configuration file.
        /// </summary>
        public RSMEntities() : base("name=RSMEntities", "RSMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RSMEntities object.
        /// </summary>
        public RSMEntities(string connectionString) : base(connectionString, "RSMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RSMEntities object.
        /// </summary>
        public RSMEntities(EntityConnection connection) : base(connection, "RSMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AttendanceLog> AttendanceLogs
        {
            get
            {
                if ((_AttendanceLogs == null))
                {
                    _AttendanceLogs = base.CreateObjectSet<AttendanceLog>("AttendanceLogs");
                }
                return _AttendanceLogs;
            }
        }
        private ObjectSet<AttendanceLog> _AttendanceLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Class> Classes
        {
            get
            {
                if ((_Classes == null))
                {
                    _Classes = base.CreateObjectSet<Class>("Classes");
                }
                return _Classes;
            }
        }
        private ObjectSet<Class> _Classes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Instructor> Instructors
        {
            get
            {
                if ((_Instructors == null))
                {
                    _Instructors = base.CreateObjectSet<Instructor>("Instructors");
                }
                return _Instructors;
            }
        }
        private ObjectSet<Instructor> _Instructors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogImage> LogImages
        {
            get
            {
                if ((_LogImages == null))
                {
                    _LogImages = base.CreateObjectSet<LogImage>("LogImages");
                }
                return _LogImages;
            }
        }
        private ObjectSet<LogImage> _LogImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogType> LogTypes
        {
            get
            {
                if ((_LogTypes == null))
                {
                    _LogTypes = base.CreateObjectSet<LogType>("LogTypes");
                }
                return _LogTypes;
            }
        }
        private ObjectSet<LogType> _LogTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Major> Majors
        {
            get
            {
                if ((_Majors == null))
                {
                    _Majors = base.CreateObjectSet<Major>("Majors");
                }
                return _Majors;
            }
        }
        private ObjectSet<Major> _Majors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Semester> Semesters
        {
            get
            {
                if ((_Semesters == null))
                {
                    _Semesters = base.CreateObjectSet<Semester>("Semesters");
                }
                return _Semesters;
            }
        }
        private ObjectSet<Semester> _Semesters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Staff> Staffs
        {
            get
            {
                if ((_Staffs == null))
                {
                    _Staffs = base.CreateObjectSet<Staff>("Staffs");
                }
                return _Staffs;
            }
        }
        private ObjectSet<Staff> _Staffs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudentAttendance> StudentAttendances
        {
            get
            {
                if ((_StudentAttendances == null))
                {
                    _StudentAttendances = base.CreateObjectSet<StudentAttendance>("StudentAttendances");
                }
                return _StudentAttendances;
            }
        }
        private ObjectSet<StudentAttendance> _StudentAttendances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudySession> StudySessions
        {
            get
            {
                if ((_StudySessions == null))
                {
                    _StudySessions = base.CreateObjectSet<StudySession>("StudySessions");
                }
                return _StudySessions;
            }
        }
        private ObjectSet<StudySession> _StudySessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubjectType> SubjectTypes
        {
            get
            {
                if ((_SubjectTypes == null))
                {
                    _SubjectTypes = base.CreateObjectSet<SubjectType>("SubjectTypes");
                }
                return _SubjectTypes;
            }
        }
        private ObjectSet<SubjectType> _SubjectTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RollCall> RollCalls
        {
            get
            {
                if ((_RollCalls == null))
                {
                    _RollCalls = base.CreateObjectSet<RollCall>("RollCalls");
                }
                return _RollCalls;
            }
        }
        private ObjectSet<RollCall> _RollCalls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudentImage> StudentImages
        {
            get
            {
                if ((_StudentImages == null))
                {
                    _StudentImages = base.CreateObjectSet<StudentImage>("StudentImages");
                }
                return _StudentImages;
            }
        }
        private ObjectSet<StudentImage> _StudentImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Request> Requests
        {
            get
            {
                if ((_Requests == null))
                {
                    _Requests = base.CreateObjectSet<Request>("Requests");
                }
                return _Requests;
            }
        }
        private ObjectSet<Request> _Requests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestImage> RequestImages
        {
            get
            {
                if ((_RequestImages == null))
                {
                    _RequestImages = base.CreateObjectSet<RequestImage>("RequestImages");
                }
                return _RequestImages;
            }
        }
        private ObjectSet<RequestImage> _RequestImages;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AttendanceLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttendanceLogs(AttendanceLog attendanceLog)
        {
            base.AddObject("AttendanceLogs", attendanceLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Classes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClasses(Class @class)
        {
            base.AddObject("Classes", @class);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Instructors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstructors(Instructor instructor)
        {
            base.AddObject("Instructors", instructor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogImages(LogImage logImage)
        {
            base.AddObject("LogImages", logImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogTypes(LogType logType)
        {
            base.AddObject("LogTypes", logType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Majors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMajors(Major major)
        {
            base.AddObject("Majors", major);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Semesters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSemesters(Semester semester)
        {
            base.AddObject("Semesters", semester);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Staffs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaffs(Staff staff)
        {
            base.AddObject("Staffs", staff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudentAttendances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudentAttendances(StudentAttendance studentAttendance)
        {
            base.AddObject("StudentAttendances", studentAttendance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudySessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudySessions(StudySession studySession)
        {
            base.AddObject("StudySessions", studySession);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubjectTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjectTypes(SubjectType subjectType)
        {
            base.AddObject("SubjectTypes", subjectType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RollCalls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRollCalls(RollCall rollCall)
        {
            base.AddObject("RollCalls", rollCall);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudentImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudentImages(StudentImage studentImage)
        {
            base.AddObject("StudentImages", studentImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Requests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequests(Request request)
        {
            base.AddObject("Requests", request);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestImages(RequestImage requestImage)
        {
            base.AddObject("RequestImages", requestImage);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="AttendanceLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AttendanceLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AttendanceLog object.
        /// </summary>
        /// <param name="logID">Initial value of the LogID property.</param>
        /// <param name="rollCallID">Initial value of the RollCallID property.</param>
        /// <param name="logDate">Initial value of the LogDate property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        public static AttendanceLog CreateAttendanceLog(global::System.Int32 logID, global::System.Int32 rollCallID, global::System.DateTime logDate, global::System.Int32 typeID)
        {
            AttendanceLog attendanceLog = new AttendanceLog();
            attendanceLog.LogID = logID;
            attendanceLog.RollCallID = rollCallID;
            attendanceLog.LogDate = logDate;
            attendanceLog.TypeID = typeID;
            return attendanceLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                if (_LogID != value)
                {
                    OnLogIDChanging(value);
                    ReportPropertyChanging("LogID");
                    _LogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogID");
                    OnLogIDChanged();
                }
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RollCallID
        {
            get
            {
                return _RollCallID;
            }
            set
            {
                OnRollCallIDChanging(value);
                ReportPropertyChanging("RollCallID");
                _RollCallID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RollCallID");
                OnRollCallIDChanged();
            }
        }
        private global::System.Int32 _RollCallID;
        partial void OnRollCallIDChanging(global::System.Int32 value);
        partial void OnRollCallIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LogDate
        {
            get
            {
                return _LogDate;
            }
            set
            {
                OnLogDateChanging(value);
                ReportPropertyChanging("LogDate");
                _LogDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogDate");
                OnLogDateChanged();
            }
        }
        private global::System.DateTime _LogDate;
        partial void OnLogDateChanging(global::System.DateTime value);
        partial void OnLogDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "AttendanceLog_LogImage_FK1", "LogImage")]
        public EntityCollection<LogImage> LogImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogImage>("RSMModel.AttendanceLog_LogImage_FK1", "LogImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogImage>("RSMModel.AttendanceLog_LogImage_FK1", "LogImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "LogType_AttendanceLog_FK1", "LogType")]
        public LogType LogType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogType>("RSMModel.LogType_AttendanceLog_FK1", "LogType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogType>("RSMModel.LogType_AttendanceLog_FK1", "LogType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LogType> LogTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogType>("RSMModel.LogType_AttendanceLog_FK1", "LogType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LogType>("RSMModel.LogType_AttendanceLog_FK1", "LogType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "AttendanceLog_StudentAttendance_FK1", "StudentAttendance")]
        public EntityCollection<StudentAttendance> StudentAttendances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentAttendance>("RSMModel.AttendanceLog_StudentAttendance_FK1", "StudentAttendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentAttendance>("RSMModel.AttendanceLog_StudentAttendance_FK1", "StudentAttendance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "RollCall_AttendanceLog_FK1", "RollCall")]
        public RollCall RollCall
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RollCall>("RSMModel.RollCall_AttendanceLog_FK1", "RollCall").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RollCall>("RSMModel.RollCall_AttendanceLog_FK1", "RollCall").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RollCall> RollCallReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RollCall>("RSMModel.RollCall_AttendanceLog_FK1", "RollCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RollCall>("RSMModel.RollCall_AttendanceLog_FK1", "RollCall", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Class object.
        /// </summary>
        /// <param name="classID">Initial value of the ClassID property.</param>
        /// <param name="majorID">Initial value of the MajorID property.</param>
        /// <param name="className">Initial value of the ClassName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Class CreateClass(global::System.Int32 classID, global::System.Int32 majorID, global::System.String className, global::System.Boolean isActive)
        {
            Class @class = new Class();
            @class.ClassID = classID;
            @class.MajorID = majorID;
            @class.ClassName = className;
            @class.IsActive = isActive;
            return @class;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                if (_ClassID != value)
                {
                    OnClassIDChanging(value);
                    ReportPropertyChanging("ClassID");
                    _ClassID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClassID");
                    OnClassIDChanged();
                }
            }
        }
        private global::System.Int32 _ClassID;
        partial void OnClassIDChanging(global::System.Int32 value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MajorID
        {
            get
            {
                return _MajorID;
            }
            set
            {
                OnMajorIDChanging(value);
                ReportPropertyChanging("MajorID");
                _MajorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MajorID");
                OnMajorIDChanged();
            }
        }
        private global::System.Int32 _MajorID;
        partial void OnMajorIDChanging(global::System.Int32 value);
        partial void OnMajorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                OnClassNameChanging(value);
                ReportPropertyChanging("ClassName");
                _ClassName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassName");
                OnClassNameChanged();
            }
        }
        private global::System.String _ClassName;
        partial void OnClassNameChanging(global::System.String value);
        partial void OnClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_Class_Major", "Major")]
        public Major Major
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Major>("RSMModel.FK_Class_Major", "Major").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Major>("RSMModel.FK_Class_Major", "Major").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Major> MajorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Major>("RSMModel.FK_Class_Major", "Major");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Major>("RSMModel.FK_Class_Major", "Major", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_StudySession_Class", "StudySession")]
        public EntityCollection<StudySession> StudySessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudySession>("RSMModel.FK_StudySession_Class", "StudySession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudySession>("RSMModel.FK_StudySession_Class", "StudySession", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_RollCall_Class", "RollCall")]
        public EntityCollection<RollCall> RollCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RollCall>("RSMModel.FK_RollCall_Class", "RollCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RollCall>("RSMModel.FK_RollCall_Class", "RollCall", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "Class_Student_FK1", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("RSMModel.Class_Student_FK1", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("RSMModel.Class_Student_FK1", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="Instructor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Instructor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Instructor object.
        /// </summary>
        /// <param name="instructorID">Initial value of the InstructorID property.</param>
        /// <param name="fullname">Initial value of the Fullname property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="subjectTypeID">Initial value of the SubjectTypeID property.</param>
        public static Instructor CreateInstructor(global::System.Int32 instructorID, global::System.String fullname, global::System.Boolean isActive, global::System.Int32 subjectTypeID)
        {
            Instructor instructor = new Instructor();
            instructor.InstructorID = instructorID;
            instructor.Fullname = fullname;
            instructor.IsActive = isActive;
            instructor.SubjectTypeID = subjectTypeID;
            return instructor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstructorID
        {
            get
            {
                return _InstructorID;
            }
            set
            {
                if (_InstructorID != value)
                {
                    OnInstructorIDChanging(value);
                    ReportPropertyChanging("InstructorID");
                    _InstructorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstructorID");
                    OnInstructorIDChanged();
                }
            }
        }
        private global::System.Int32 _InstructorID;
        partial void OnInstructorIDChanging(global::System.Int32 value);
        partial void OnInstructorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fullname
        {
            get
            {
                return _Fullname;
            }
            set
            {
                OnFullnameChanging(value);
                ReportPropertyChanging("Fullname");
                _Fullname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fullname");
                OnFullnameChanged();
            }
        }
        private global::System.String _Fullname;
        partial void OnFullnameChanging(global::System.String value);
        partial void OnFullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectTypeID
        {
            get
            {
                return _SubjectTypeID;
            }
            set
            {
                OnSubjectTypeIDChanging(value);
                ReportPropertyChanging("SubjectTypeID");
                _SubjectTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectTypeID");
                OnSubjectTypeIDChanged();
            }
        }
        private global::System.Int32 _SubjectTypeID;
        partial void OnSubjectTypeIDChanging(global::System.Int32 value);
        partial void OnSubjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApiToken
        {
            get
            {
                return _ApiToken;
            }
            set
            {
                OnApiTokenChanging(value);
                ReportPropertyChanging("ApiToken");
                _ApiToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApiToken");
                OnApiTokenChanged();
            }
        }
        private global::System.String _ApiToken;
        partial void OnApiTokenChanging(global::System.String value);
        partial void OnApiTokenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "User_Instructor_FK1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.User_Instructor_FK1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.User_Instructor_FK1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.User_Instructor_FK1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RSMModel.User_Instructor_FK1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_StudySession_Instructor", "StudySession")]
        public EntityCollection<StudySession> StudySessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudySession>("RSMModel.FK_StudySession_Instructor", "StudySession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudySession>("RSMModel.FK_StudySession_Instructor", "StudySession", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_Instructor_SubjectType", "SubjectType")]
        public SubjectType SubjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectType>("RSMModel.FK_Instructor_SubjectType", "SubjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectType>("RSMModel.FK_Instructor_SubjectType", "SubjectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubjectType> SubjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectType>("RSMModel.FK_Instructor_SubjectType", "SubjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubjectType>("RSMModel.FK_Instructor_SubjectType", "SubjectType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_RollCall_Instructor", "RollCall")]
        public EntityCollection<RollCall> RollCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RollCall>("RSMModel.FK_RollCall_Instructor", "RollCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RollCall>("RSMModel.FK_RollCall_Instructor", "RollCall", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="LogImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogImage object.
        /// </summary>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="logID">Initial value of the LogID property.</param>
        /// <param name="imageLink">Initial value of the ImageLink property.</param>
        public static LogImage CreateLogImage(global::System.Int32 imageID, global::System.Int32 logID, global::System.String imageLink)
        {
            LogImage logImage = new LogImage();
            logImage.ImageID = imageID;
            logImage.LogID = logID;
            logImage.ImageLink = imageLink;
            return logImage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                OnLogIDChanging(value);
                ReportPropertyChanging("LogID");
                _LogID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogID");
                OnLogIDChanged();
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageLink
        {
            get
            {
                return _ImageLink;
            }
            set
            {
                OnImageLinkChanging(value);
                ReportPropertyChanging("ImageLink");
                _ImageLink = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageLink");
                OnImageLinkChanged();
            }
        }
        private global::System.String _ImageLink;
        partial void OnImageLinkChanging(global::System.String value);
        partial void OnImageLinkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "AttendanceLog_LogImage_FK1", "AttendanceLog")]
        public AttendanceLog AttendanceLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttendanceLog>("RSMModel.AttendanceLog_LogImage_FK1", "AttendanceLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttendanceLog>("RSMModel.AttendanceLog_LogImage_FK1", "AttendanceLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AttendanceLog> AttendanceLogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttendanceLog>("RSMModel.AttendanceLog_LogImage_FK1", "AttendanceLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AttendanceLog>("RSMModel.AttendanceLog_LogImage_FK1", "AttendanceLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="LogType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogType object.
        /// </summary>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        public static LogType CreateLogType(global::System.Int32 typeID)
        {
            LogType logType = new LogType();
            logType.TypeID = typeID;
            return logType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                if (_TypeID != value)
                {
                    OnTypeIDChanging(value);
                    ReportPropertyChanging("TypeID");
                    _TypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TypeID");
                    OnTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "LogType_AttendanceLog_FK1", "AttendanceLog")]
        public EntityCollection<AttendanceLog> AttendanceLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttendanceLog>("RSMModel.LogType_AttendanceLog_FK1", "AttendanceLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttendanceLog>("RSMModel.LogType_AttendanceLog_FK1", "AttendanceLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="Major")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Major : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Major object.
        /// </summary>
        /// <param name="majorID">Initial value of the MajorID property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static Major CreateMajor(global::System.Int32 majorID, global::System.String fullName)
        {
            Major major = new Major();
            major.MajorID = majorID;
            major.FullName = fullName;
            return major;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MajorID
        {
            get
            {
                return _MajorID;
            }
            set
            {
                if (_MajorID != value)
                {
                    OnMajorIDChanging(value);
                    ReportPropertyChanging("MajorID");
                    _MajorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MajorID");
                    OnMajorIDChanged();
                }
            }
        }
        private global::System.Int32 _MajorID;
        partial void OnMajorIDChanging(global::System.Int32 value);
        partial void OnMajorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_Class_Major", "Class")]
        public EntityCollection<Class> Classes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("RSMModel.FK_Class_Major", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("RSMModel.FK_Class_Major", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "SubjectMajorMapping", "Subject")]
        public EntityCollection<Subject> Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subject>("RSMModel.SubjectMajorMapping", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subject>("RSMModel.SubjectMajorMapping", "Subject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="Request")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Request : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Request object.
        /// </summary>
        /// <param name="requestID">Initial value of the RequestID property.</param>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="isAccepted">Initial value of the IsAccepted property.</param>
        public static Request CreateRequest(global::System.Int32 requestID, global::System.Int32 studentID, global::System.Boolean isAccepted)
        {
            Request request = new Request();
            request.RequestID = requestID;
            request.StudentID = studentID;
            request.IsAccepted = isAccepted;
            return request;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestID
        {
            get
            {
                return _RequestID;
            }
            set
            {
                if (_RequestID != value)
                {
                    OnRequestIDChanging(value);
                    ReportPropertyChanging("RequestID");
                    _RequestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequestID");
                    OnRequestIDChanged();
                }
            }
        }
        private global::System.Int32 _RequestID;
        partial void OnRequestIDChanging(global::System.Int32 value);
        partial void OnRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                OnStudentIDChanging(value);
                ReportPropertyChanging("StudentID");
                _StudentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentID");
                OnStudentIDChanged();
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CheckedAdminID
        {
            get
            {
                return _CheckedAdminID;
            }
            set
            {
                OnCheckedAdminIDChanging(value);
                ReportPropertyChanging("CheckedAdminID");
                _CheckedAdminID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckedAdminID");
                OnCheckedAdminIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CheckedAdminID;
        partial void OnCheckedAdminIDChanging(Nullable<global::System.Int32> value);
        partial void OnCheckedAdminIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAccepted
        {
            get
            {
                return _IsAccepted;
            }
            set
            {
                OnIsAcceptedChanging(value);
                ReportPropertyChanging("IsAccepted");
                _IsAccepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAccepted");
                OnIsAcceptedChanged();
            }
        }
        private global::System.Boolean _IsAccepted;
        partial void OnIsAcceptedChanging(global::System.Boolean value);
        partial void OnIsAcceptedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_Request_Student", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("RSMModel.FK_Request_Student", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("RSMModel.FK_Request_Student", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("RSMModel.FK_Request_Student", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("RSMModel.FK_Request_Student", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_Request_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.FK_Request_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.FK_Request_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.FK_Request_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RSMModel.FK_Request_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_RequestImage_Request", "RequestImage")]
        public EntityCollection<RequestImage> RequestImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestImage>("RSMModel.FK_RequestImage_Request", "RequestImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestImage>("RSMModel.FK_RequestImage_Request", "RequestImage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="RequestImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestImage object.
        /// </summary>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="requestID">Initial value of the RequestID property.</param>
        /// <param name="imageLink">Initial value of the ImageLink property.</param>
        public static RequestImage CreateRequestImage(global::System.Int32 imageID, global::System.Int32 requestID, global::System.String imageLink)
        {
            RequestImage requestImage = new RequestImage();
            requestImage.ImageID = imageID;
            requestImage.RequestID = requestID;
            requestImage.ImageLink = imageLink;
            return requestImage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestID
        {
            get
            {
                return _RequestID;
            }
            set
            {
                OnRequestIDChanging(value);
                ReportPropertyChanging("RequestID");
                _RequestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestID");
                OnRequestIDChanged();
            }
        }
        private global::System.Int32 _RequestID;
        partial void OnRequestIDChanging(global::System.Int32 value);
        partial void OnRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageLink
        {
            get
            {
                return _ImageLink;
            }
            set
            {
                OnImageLinkChanging(value);
                ReportPropertyChanging("ImageLink");
                _ImageLink = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageLink");
                OnImageLinkChanged();
            }
        }
        private global::System.String _ImageLink;
        partial void OnImageLinkChanging(global::System.String value);
        partial void OnImageLinkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_RequestImage_Request", "Request")]
        public Request Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("RSMModel.FK_RequestImage_Request", "Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("RSMModel.FK_RequestImage_Request", "Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Request> RequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("RSMModel.FK_RequestImage_Request", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Request>("RSMModel.FK_RequestImage_Request", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.String roleName)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.RoleName = roleName;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "Role_User_FK1", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("RSMModel.Role_User_FK1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("RSMModel.Role_User_FK1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="RollCall")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RollCall : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RollCall object.
        /// </summary>
        /// <param name="rollCallID">Initial value of the RollCallID property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="beginDate">Initial value of the BeginDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        /// <param name="semesterID">Initial value of the SemesterID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="instructorID">Initial value of the InstructorID property.</param>
        public static RollCall CreateRollCall(global::System.Int32 rollCallID, global::System.TimeSpan startTime, global::System.TimeSpan endTime, global::System.DateTime beginDate, global::System.DateTime endDate, global::System.Int32 subjectID, global::System.Int32 classID, global::System.Int32 semesterID, global::System.Int32 status, global::System.Int32 instructorID)
        {
            RollCall rollCall = new RollCall();
            rollCall.RollCallID = rollCallID;
            rollCall.StartTime = startTime;
            rollCall.EndTime = endTime;
            rollCall.BeginDate = beginDate;
            rollCall.EndDate = endDate;
            rollCall.SubjectID = subjectID;
            rollCall.ClassID = classID;
            rollCall.SemesterID = semesterID;
            rollCall.Status = status;
            rollCall.InstructorID = instructorID;
            return rollCall;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RollCallID
        {
            get
            {
                return _RollCallID;
            }
            set
            {
                if (_RollCallID != value)
                {
                    OnRollCallIDChanging(value);
                    ReportPropertyChanging("RollCallID");
                    _RollCallID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RollCallID");
                    OnRollCallIDChanged();
                }
            }
        }
        private global::System.Int32 _RollCallID;
        partial void OnRollCallIDChanging(global::System.Int32 value);
        partial void OnRollCallIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.TimeSpan _StartTime;
        partial void OnStartTimeChanging(global::System.TimeSpan value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.TimeSpan _EndTime;
        partial void OnEndTimeChanging(global::System.TimeSpan value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BeginDate
        {
            get
            {
                return _BeginDate;
            }
            set
            {
                OnBeginDateChanging(value);
                ReportPropertyChanging("BeginDate");
                _BeginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeginDate");
                OnBeginDateChanged();
            }
        }
        private global::System.DateTime _BeginDate;
        partial void OnBeginDateChanging(global::System.DateTime value);
        partial void OnBeginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.Int32 _ClassID;
        partial void OnClassIDChanging(global::System.Int32 value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SemesterID
        {
            get
            {
                return _SemesterID;
            }
            set
            {
                OnSemesterIDChanging(value);
                ReportPropertyChanging("SemesterID");
                _SemesterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SemesterID");
                OnSemesterIDChanged();
            }
        }
        private global::System.Int32 _SemesterID;
        partial void OnSemesterIDChanging(global::System.Int32 value);
        partial void OnSemesterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstructorID
        {
            get
            {
                return _InstructorID;
            }
            set
            {
                OnInstructorIDChanging(value);
                ReportPropertyChanging("InstructorID");
                _InstructorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstructorID");
                OnInstructorIDChanged();
            }
        }
        private global::System.Int32 _InstructorID;
        partial void OnInstructorIDChanging(global::System.Int32 value);
        partial void OnInstructorIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "RollCall_AttendanceLog_FK1", "AttendanceLog")]
        public EntityCollection<AttendanceLog> AttendanceLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttendanceLog>("RSMModel.RollCall_AttendanceLog_FK1", "AttendanceLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttendanceLog>("RSMModel.RollCall_AttendanceLog_FK1", "AttendanceLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_RollCall_Class", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("RSMModel.FK_RollCall_Class", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("RSMModel.FK_RollCall_Class", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("RSMModel.FK_RollCall_Class", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("RSMModel.FK_RollCall_Class", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_RollCall_Instructor", "Instructor")]
        public Instructor Instructor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("RSMModel.FK_RollCall_Instructor", "Instructor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("RSMModel.FK_RollCall_Instructor", "Instructor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instructor> InstructorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("RSMModel.FK_RollCall_Instructor", "Instructor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instructor>("RSMModel.FK_RollCall_Instructor", "Instructor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_RollCall_Semester", "Semester")]
        public Semester Semester
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("RSMModel.FK_RollCall_Semester", "Semester").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("RSMModel.FK_RollCall_Semester", "Semester").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Semester> SemesterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("RSMModel.FK_RollCall_Semester", "Semester");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Semester>("RSMModel.FK_RollCall_Semester", "Semester", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_RollCall_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("RSMModel.FK_RollCall_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("RSMModel.FK_RollCall_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("RSMModel.FK_RollCall_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("RSMModel.FK_RollCall_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_StudySession_RollCall", "StudySession")]
        public EntityCollection<StudySession> StudySessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudySession>("RSMModel.FK_StudySession_RollCall", "StudySession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudySession>("RSMModel.FK_StudySession_RollCall", "StudySession", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "StudentInRollCall", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("RSMModel.StudentInRollCall", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("RSMModel.StudentInRollCall", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="Semester")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Semester : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Semester object.
        /// </summary>
        /// <param name="semesterID">Initial value of the SemesterID property.</param>
        /// <param name="semesterName">Initial value of the SemesterName property.</param>
        /// <param name="beginDate">Initial value of the BeginDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        public static Semester CreateSemester(global::System.Int32 semesterID, global::System.String semesterName, global::System.DateTime beginDate, global::System.DateTime endDate)
        {
            Semester semester = new Semester();
            semester.SemesterID = semesterID;
            semester.SemesterName = semesterName;
            semester.BeginDate = beginDate;
            semester.EndDate = endDate;
            return semester;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SemesterID
        {
            get
            {
                return _SemesterID;
            }
            set
            {
                if (_SemesterID != value)
                {
                    OnSemesterIDChanging(value);
                    ReportPropertyChanging("SemesterID");
                    _SemesterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SemesterID");
                    OnSemesterIDChanged();
                }
            }
        }
        private global::System.Int32 _SemesterID;
        partial void OnSemesterIDChanging(global::System.Int32 value);
        partial void OnSemesterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SemesterName
        {
            get
            {
                return _SemesterName;
            }
            set
            {
                OnSemesterNameChanging(value);
                ReportPropertyChanging("SemesterName");
                _SemesterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SemesterName");
                OnSemesterNameChanged();
            }
        }
        private global::System.String _SemesterName;
        partial void OnSemesterNameChanging(global::System.String value);
        partial void OnSemesterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BeginDate
        {
            get
            {
                return _BeginDate;
            }
            set
            {
                OnBeginDateChanging(value);
                ReportPropertyChanging("BeginDate");
                _BeginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeginDate");
                OnBeginDateChanged();
            }
        }
        private global::System.DateTime _BeginDate;
        partial void OnBeginDateChanging(global::System.DateTime value);
        partial void OnBeginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_RollCall_Semester", "RollCall")]
        public EntityCollection<RollCall> RollCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RollCall>("RSMModel.FK_RollCall_Semester", "RollCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RollCall>("RSMModel.FK_RollCall_Semester", "RollCall", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="Staff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Staff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Staff object.
        /// </summary>
        /// <param name="staffID">Initial value of the StaffID property.</param>
        /// <param name="fullname">Initial value of the Fullname property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Staff CreateStaff(global::System.Int32 staffID, global::System.String fullname, global::System.Boolean isActive)
        {
            Staff staff = new Staff();
            staff.StaffID = staffID;
            staff.Fullname = fullname;
            staff.IsActive = isActive;
            return staff;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StaffID
        {
            get
            {
                return _StaffID;
            }
            set
            {
                if (_StaffID != value)
                {
                    OnStaffIDChanging(value);
                    ReportPropertyChanging("StaffID");
                    _StaffID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StaffID");
                    OnStaffIDChanged();
                }
            }
        }
        private global::System.Int32 _StaffID;
        partial void OnStaffIDChanging(global::System.Int32 value);
        partial void OnStaffIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fullname
        {
            get
            {
                return _Fullname;
            }
            set
            {
                OnFullnameChanging(value);
                ReportPropertyChanging("Fullname");
                _Fullname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fullname");
                OnFullnameChanged();
            }
        }
        private global::System.String _Fullname;
        partial void OnFullnameChanging(global::System.String value);
        partial void OnFullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "User_Staff_FK1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.User_Staff_FK1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.User_Staff_FK1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.User_Staff_FK1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RSMModel.User_Staff_FK1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="birthdate">Initial value of the Birthdate property.</param>
        /// <param name="citizenID">Initial value of the CitizenID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="studentCode">Initial value of the StudentCode property.</param>
        public static Student CreateStudent(global::System.Int32 studentID, global::System.String fullName, global::System.DateTime birthdate, global::System.String citizenID, global::System.Boolean isActive, global::System.String studentCode)
        {
            Student student = new Student();
            student.StudentID = studentID;
            student.FullName = fullName;
            student.Birthdate = birthdate;
            student.CitizenID = citizenID;
            student.IsActive = isActive;
            student.StudentCode = studentCode;
            return student;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                if (_StudentID != value)
                {
                    OnStudentIDChanging(value);
                    ReportPropertyChanging("StudentID");
                    _StudentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentID");
                    OnStudentIDChanged();
                }
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClassID;
        partial void OnClassIDChanging(Nullable<global::System.Int32> value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private global::System.DateTime _Birthdate;
        partial void OnBirthdateChanging(global::System.DateTime value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CitizenID
        {
            get
            {
                return _CitizenID;
            }
            set
            {
                OnCitizenIDChanging(value);
                ReportPropertyChanging("CitizenID");
                _CitizenID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CitizenID");
                OnCitizenIDChanged();
            }
        }
        private global::System.String _CitizenID;
        partial void OnCitizenIDChanging(global::System.String value);
        partial void OnCitizenIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StudentCode
        {
            get
            {
                return _StudentCode;
            }
            set
            {
                OnStudentCodeChanging(value);
                ReportPropertyChanging("StudentCode");
                _StudentCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StudentCode");
                OnStudentCodeChanged();
            }
        }
        private global::System.String _StudentCode;
        partial void OnStudentCodeChanging(global::System.String value);
        partial void OnStudentCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "Class_Student_FK1", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("RSMModel.Class_Student_FK1", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("RSMModel.Class_Student_FK1", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("RSMModel.Class_Student_FK1", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("RSMModel.Class_Student_FK1", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "Student_StudentAttendance_FK1", "StudentAttendance")]
        public EntityCollection<StudentAttendance> StudentAttendances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentAttendance>("RSMModel.Student_StudentAttendance_FK1", "StudentAttendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentAttendance>("RSMModel.Student_StudentAttendance_FK1", "StudentAttendance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "Student_StudentImage_FK1", "StudentImage")]
        public EntityCollection<StudentImage> StudentImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentImage>("RSMModel.Student_StudentImage_FK1", "StudentImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentImage>("RSMModel.Student_StudentImage_FK1", "StudentImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "User_Student_FK1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.User_Student_FK1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.User_Student_FK1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RSMModel.User_Student_FK1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RSMModel.User_Student_FK1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "StudentInRollCall", "RollCall")]
        public EntityCollection<RollCall> RollCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RollCall>("RSMModel.StudentInRollCall", "RollCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RollCall>("RSMModel.StudentInRollCall", "RollCall", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_Request_Student", "Request")]
        public EntityCollection<Request> Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("RSMModel.FK_Request_Student", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("RSMModel.FK_Request_Student", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="StudentAttendance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudentAttendance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudentAttendance object.
        /// </summary>
        /// <param name="logID">Initial value of the LogID property.</param>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="isPresent">Initial value of the IsPresent property.</param>
        public static StudentAttendance CreateStudentAttendance(global::System.Int32 logID, global::System.Int32 studentID, global::System.Boolean isPresent)
        {
            StudentAttendance studentAttendance = new StudentAttendance();
            studentAttendance.LogID = logID;
            studentAttendance.StudentID = studentID;
            studentAttendance.IsPresent = isPresent;
            return studentAttendance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                if (_LogID != value)
                {
                    OnLogIDChanging(value);
                    ReportPropertyChanging("LogID");
                    _LogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogID");
                    OnLogIDChanged();
                }
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                if (_StudentID != value)
                {
                    OnStudentIDChanging(value);
                    ReportPropertyChanging("StudentID");
                    _StudentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentID");
                    OnStudentIDChanged();
                }
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPresent
        {
            get
            {
                return _IsPresent;
            }
            set
            {
                OnIsPresentChanging(value);
                ReportPropertyChanging("IsPresent");
                _IsPresent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPresent");
                OnIsPresentChanged();
            }
        }
        private global::System.Boolean _IsPresent;
        partial void OnIsPresentChanging(global::System.Boolean value);
        partial void OnIsPresentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "AttendanceLog_StudentAttendance_FK1", "AttendanceLog")]
        public AttendanceLog AttendanceLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttendanceLog>("RSMModel.AttendanceLog_StudentAttendance_FK1", "AttendanceLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttendanceLog>("RSMModel.AttendanceLog_StudentAttendance_FK1", "AttendanceLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AttendanceLog> AttendanceLogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttendanceLog>("RSMModel.AttendanceLog_StudentAttendance_FK1", "AttendanceLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AttendanceLog>("RSMModel.AttendanceLog_StudentAttendance_FK1", "AttendanceLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "Student_StudentAttendance_FK1", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("RSMModel.Student_StudentAttendance_FK1", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("RSMModel.Student_StudentAttendance_FK1", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("RSMModel.Student_StudentAttendance_FK1", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("RSMModel.Student_StudentAttendance_FK1", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="StudentImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudentImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudentImage object.
        /// </summary>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="imageLink">Initial value of the ImageLink property.</param>
        public static StudentImage CreateStudentImage(global::System.Int32 imageID, global::System.Int32 studentID, global::System.String imageLink)
        {
            StudentImage studentImage = new StudentImage();
            studentImage.ImageID = imageID;
            studentImage.StudentID = studentID;
            studentImage.ImageLink = imageLink;
            return studentImage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                OnStudentIDChanging(value);
                ReportPropertyChanging("StudentID");
                _StudentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentID");
                OnStudentIDChanged();
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageLink
        {
            get
            {
                return _ImageLink;
            }
            set
            {
                OnImageLinkChanging(value);
                ReportPropertyChanging("ImageLink");
                _ImageLink = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageLink");
                OnImageLinkChanged();
            }
        }
        private global::System.String _ImageLink;
        partial void OnImageLinkChanging(global::System.String value);
        partial void OnImageLinkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "Student_StudentImage_FK1", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("RSMModel.Student_StudentImage_FK1", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("RSMModel.Student_StudentImage_FK1", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("RSMModel.Student_StudentImage_FK1", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("RSMModel.Student_StudentImage_FK1", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="StudySession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudySession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudySession object.
        /// </summary>
        /// <param name="sessionID">Initial value of the SessionID property.</param>
        /// <param name="rollCallID">Initial value of the RollCallID property.</param>
        /// <param name="instructorID">Initial value of the InstructorID property.</param>
        /// <param name="sessionDate">Initial value of the SessionDate property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        public static StudySession CreateStudySession(global::System.Int32 sessionID, global::System.Int32 rollCallID, global::System.Int32 instructorID, global::System.DateTime sessionDate, global::System.TimeSpan startTime, global::System.TimeSpan endTime, global::System.Int32 classID)
        {
            StudySession studySession = new StudySession();
            studySession.SessionID = sessionID;
            studySession.RollCallID = rollCallID;
            studySession.InstructorID = instructorID;
            studySession.SessionDate = sessionDate;
            studySession.StartTime = startTime;
            studySession.EndTime = endTime;
            studySession.ClassID = classID;
            return studySession;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                if (_SessionID != value)
                {
                    OnSessionIDChanging(value);
                    ReportPropertyChanging("SessionID");
                    _SessionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SessionID");
                    OnSessionIDChanged();
                }
            }
        }
        private global::System.Int32 _SessionID;
        partial void OnSessionIDChanging(global::System.Int32 value);
        partial void OnSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RollCallID
        {
            get
            {
                return _RollCallID;
            }
            set
            {
                OnRollCallIDChanging(value);
                ReportPropertyChanging("RollCallID");
                _RollCallID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RollCallID");
                OnRollCallIDChanged();
            }
        }
        private global::System.Int32 _RollCallID;
        partial void OnRollCallIDChanging(global::System.Int32 value);
        partial void OnRollCallIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstructorID
        {
            get
            {
                return _InstructorID;
            }
            set
            {
                OnInstructorIDChanging(value);
                ReportPropertyChanging("InstructorID");
                _InstructorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstructorID");
                OnInstructorIDChanged();
            }
        }
        private global::System.Int32 _InstructorID;
        partial void OnInstructorIDChanging(global::System.Int32 value);
        partial void OnInstructorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SessionDate
        {
            get
            {
                return _SessionDate;
            }
            set
            {
                OnSessionDateChanging(value);
                ReportPropertyChanging("SessionDate");
                _SessionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionDate");
                OnSessionDateChanged();
            }
        }
        private global::System.DateTime _SessionDate;
        partial void OnSessionDateChanging(global::System.DateTime value);
        partial void OnSessionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.TimeSpan _StartTime;
        partial void OnStartTimeChanging(global::System.TimeSpan value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.TimeSpan _EndTime;
        partial void OnEndTimeChanging(global::System.TimeSpan value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.Int32 _ClassID;
        partial void OnClassIDChanging(global::System.Int32 value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_StudySession_Class", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("RSMModel.FK_StudySession_Class", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("RSMModel.FK_StudySession_Class", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("RSMModel.FK_StudySession_Class", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("RSMModel.FK_StudySession_Class", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_StudySession_Instructor", "Instructor")]
        public Instructor Instructor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("RSMModel.FK_StudySession_Instructor", "Instructor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("RSMModel.FK_StudySession_Instructor", "Instructor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instructor> InstructorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instructor>("RSMModel.FK_StudySession_Instructor", "Instructor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instructor>("RSMModel.FK_StudySession_Instructor", "Instructor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_StudySession_RollCall", "RollCall")]
        public RollCall RollCall
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RollCall>("RSMModel.FK_StudySession_RollCall", "RollCall").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RollCall>("RSMModel.FK_StudySession_RollCall", "RollCall").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RollCall> RollCallReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RollCall>("RSMModel.FK_StudySession_RollCall", "RollCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RollCall>("RSMModel.FK_StudySession_RollCall", "RollCall", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="numberOfSlot">Initial value of the NumberOfSlot property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="numberOfSession">Initial value of the NumberOfSession property.</param>
        /// <param name="isSlotFixed">Initial value of the IsSlotFixed property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        public static Subject CreateSubject(global::System.Int32 subjectID, global::System.String fullName, global::System.Int32 numberOfSlot, global::System.Boolean isActive, global::System.Int32 numberOfSession, global::System.Boolean isSlotFixed, global::System.Int32 typeID)
        {
            Subject subject = new Subject();
            subject.SubjectID = subjectID;
            subject.FullName = fullName;
            subject.NumberOfSlot = numberOfSlot;
            subject.IsActive = isActive;
            subject.NumberOfSession = numberOfSession;
            subject.IsSlotFixed = isSlotFixed;
            subject.TypeID = typeID;
            return subject;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                if (_SubjectID != value)
                {
                    OnSubjectIDChanging(value);
                    ReportPropertyChanging("SubjectID");
                    _SubjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubjectID");
                    OnSubjectIDChanged();
                }
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfSlot
        {
            get
            {
                return _NumberOfSlot;
            }
            set
            {
                OnNumberOfSlotChanging(value);
                ReportPropertyChanging("NumberOfSlot");
                _NumberOfSlot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfSlot");
                OnNumberOfSlotChanged();
            }
        }
        private global::System.Int32 _NumberOfSlot;
        partial void OnNumberOfSlotChanging(global::System.Int32 value);
        partial void OnNumberOfSlotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfSession
        {
            get
            {
                return _NumberOfSession;
            }
            set
            {
                OnNumberOfSessionChanging(value);
                ReportPropertyChanging("NumberOfSession");
                _NumberOfSession = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfSession");
                OnNumberOfSessionChanged();
            }
        }
        private global::System.Int32 _NumberOfSession;
        partial void OnNumberOfSessionChanging(global::System.Int32 value);
        partial void OnNumberOfSessionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSlotFixed
        {
            get
            {
                return _IsSlotFixed;
            }
            set
            {
                OnIsSlotFixedChanging(value);
                ReportPropertyChanging("IsSlotFixed");
                _IsSlotFixed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSlotFixed");
                OnIsSlotFixedChanged();
            }
        }
        private global::System.Boolean _IsSlotFixed;
        partial void OnIsSlotFixedChanging(global::System.Boolean value);
        partial void OnIsSlotFixedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "SubjectMajorMapping", "Major")]
        public EntityCollection<Major> Majors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Major>("RSMModel.SubjectMajorMapping", "Major");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Major>("RSMModel.SubjectMajorMapping", "Major", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_Subject_SubjectType", "SubjectType")]
        public SubjectType SubjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectType>("RSMModel.FK_Subject_SubjectType", "SubjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectType>("RSMModel.FK_Subject_SubjectType", "SubjectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubjectType> SubjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectType>("RSMModel.FK_Subject_SubjectType", "SubjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubjectType>("RSMModel.FK_Subject_SubjectType", "SubjectType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_RollCall_Subject", "RollCall")]
        public EntityCollection<RollCall> RollCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RollCall>("RSMModel.FK_RollCall_Subject", "RollCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RollCall>("RSMModel.FK_RollCall_Subject", "RollCall", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="SubjectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubjectType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubjectType object.
        /// </summary>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static SubjectType CreateSubjectType(global::System.Int32 typeID, global::System.String typeName)
        {
            SubjectType subjectType = new SubjectType();
            subjectType.TypeID = typeID;
            subjectType.TypeName = typeName;
            return subjectType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                if (_TypeID != value)
                {
                    OnTypeIDChanging(value);
                    ReportPropertyChanging("TypeID");
                    _TypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TypeID");
                    OnTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_Instructor_SubjectType", "Instructor")]
        public EntityCollection<Instructor> Instructors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Instructor>("RSMModel.FK_Instructor_SubjectType", "Instructor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Instructor>("RSMModel.FK_Instructor_SubjectType", "Instructor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_Subject_SubjectType", "Subject")]
        public EntityCollection<Subject> Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subject>("RSMModel.FK_Subject_SubjectType", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subject>("RSMModel.FK_Subject_SubjectType", "Subject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSMModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String username, global::System.String password, global::System.Int32 roleID, global::System.Boolean isActive)
        {
            User user = new User();
            user.UserID = userID;
            user.Username = username;
            user.Password = password;
            user.RoleID = roleID;
            user.IsActive = isActive;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "User_Instructor_FK1", "Instructor")]
        public EntityCollection<Instructor> Instructors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Instructor>("RSMModel.User_Instructor_FK1", "Instructor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Instructor>("RSMModel.User_Instructor_FK1", "Instructor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "Role_User_FK1", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RSMModel.Role_User_FK1", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RSMModel.Role_User_FK1", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RSMModel.Role_User_FK1", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("RSMModel.Role_User_FK1", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "User_Staff_FK1", "Staff")]
        public EntityCollection<Staff> Staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Staff>("RSMModel.User_Staff_FK1", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Staff>("RSMModel.User_Staff_FK1", "Staff", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "User_Student_FK1", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("RSMModel.User_Student_FK1", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("RSMModel.User_Student_FK1", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSMModel", "FK_Request_User", "Request")]
        public EntityCollection<Request> Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("RSMModel.FK_Request_User", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("RSMModel.FK_Request_User", "Request", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
