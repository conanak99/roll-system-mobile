@model RollSystemMobile.Models.BindingModels.LoginModelView
@{
    ViewBag.Title = "Login";
}
@section ExtraHead 
{
    <style>
        body
        {
            background-color: rgb(245,245,245);
            background-image: url("/Content/themes/img/classroom2.jpg");
            background-repeat: no-repeat;
            background-size: cover;
        }
        #Username, #Password
        {
            padding: 7px 9px;
            font-size: 18px;
            height: auto;
            margin-bottom: 15px;
            border-radius:0;
            width: 330px;
        }
        h2 
        {
            font-family: 'Open Sans',sans-serif;
        }
        
        .input-prepend .add-on:first-child 
        {
            border-radius: 0;
        }
        
        .input-prepend .add-on 
        {
            padding: 8px 9px;
        }
        
    </style>
}
<div id="login">
    @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        <fieldset>
            <div id="legend" style="width: 300px; margin-bottom: 15px">
                <h2>
                    Login</h2>
            </div>
            <div class="input-prepend">
                <span class="add-on"><i class="icon-user"></i></span>
                <!-- Username -->
                @Html.TextBoxFor(model => model.Username, new { placeholder = "Username" })
            </div>
             @Html.ValidationMessageFor(model => model.Username)
            <div class="input-prepend">
                <span class="add-on"><i class="icon-lock"></i></span>
                <!-- Password-->
                @Html.PasswordFor(model => model.Password, new { placeholder = "Password" })
            </div>
                            @Html.ValidationMessageFor(model => model.Password)
            @Html.ValidationMessage("Error")
                  <div>  <button class="btn btn-primary btn-large" style="margin-top:10px">
                        Login</button>
                        </div>
        </fieldset>
        if (@Request.Params["ReturnUrl"] != null)
        {
        <input type="hidden" name="returnUrl" value="@Request.Params["ReturnUrl"]"/> 
        }
        else
        {
        @Html.HiddenFor(model => model.ReturnUrl)
        }
    }
</div>
