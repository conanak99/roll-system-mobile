@model RollSystemMobile.Models.RollCall
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Staff/_Layout.cshtml";
}
<h2>
    Edit Roll Call</h2>
<div style="margin-left:10px;margin-bottom:10px;">
    <b>Semester : </b>@Model.Semester.SemesterName<br />
    <b>Major : </b>@Model.Class.Major.FullName<br />
    <b>Class : </b>@Model.Class.ClassName<br />
    <b>Subject : </b>@Model.Subject.FullName<br />
    <b>From : </b> @Model.BeginDate.ToString("dd-MM-yyyy") - <b>To : </b>@Model.EndDate.ToString("dd-MM-yyyy")
</div>
@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.RollCallID)
    @Html.ValidationSummary(true)
    <table class="table">
        <tr>
            <td style="width: 350px;">
                <div class="editor-label">
                    <b>1. Begin Date</b>
                </div>
                <div class="editor-field" style="margin-left: 10px">
                    <div class="input-append date" id="begindate" data-date-format="dd-mm-yyyy">
                        <input class="span2" name="BeginDate" style="width: 100px; margin-left: 10px;" size="16" type="text"
                    value="@DateTime.Today.ToString("dd-MM-yyyy")" readonly><span class="add-on"><i class="icon-th"></i></span>
                    </div>
                </div>
                <span class="help-block">Select the begin date of roll call.</span>
                <div class="editor-label">
                    <b>2. Instructor</b>
                </div>
                <div class="editor-field" style="margin-left: 10px">
                    @Html.DropDownList("InstructorID")
                </div>
                <span class="help-block">Select the instructor of roll call.</span>
            </td>
            <td>
                <div class="editor-label">
                    <b>3. Start time</b>
                </div>
                <div class="editor-field" id="a" style="margin-left: 10px;">
                    @Html.DropDownList("StartTime", new List<SelectListItem>
       {
           new SelectListItem { Text = "07:00", Value = "07:00" }, 
           new SelectListItem { Text = "08:45", Value = "08:45" },
           new SelectListItem { Text = "10:30", Value = "10:30" }, 
           new SelectListItem { Text = "12:30", Value = "12:30" }, 
           new SelectListItem { Text = "14:15", Value = "14:15" }, 
           new SelectListItem { Text = "16:00", Value = "16:00" },
           new SelectListItem { Text = "18:45", Value = "18:45" }, 
           new SelectListItem { Text = "Other", Value = "Other" } 
       }, "", new { @id = "startTime", style = "width:90px;" }) 
                    <input style="margin-bottom: 10px; width: 80px;" type="text" name="otherTime" id="Other" />
                </div>
                <span class="help-block">Select the start time of roll call.</span>
            </td>
        </tr>
    </table>
    <p>
        <input type="submit" value="Save" class="btn btn-primary" />
    </p>
}
<div>
    @Html.ActionLink("Back to List", "Index", new { status = @Model.Status })
</div>
<script>
    $(document).ready(function () {
        $("#2").width(100);
        //
        var bgDate = '@ViewBag.BeginDate';
        var semesterUrl = '@Url.Action("GetDateSemester")/' + '@ViewBag.Semester';
        $.getJSON(semesterUrl, function (semester) {
            //set select first sunday
            var a = new Date(semester.begindate);
            var b = new Date(semester.enddate);
            var now = new Date();
            var begindate = $("#begindate").datepicker
            ({
                onRender: function (date) {

                    return date.valueOf() < now.valueOf() ||
                            date.valueOf() < a.valueOf() ||
                            date.valueOf() > b.valueOf() ||
                         date.getDay() != 1 ? 'disabled' : '';
                }
            }).data('datepicker');
            begindate.setValue(bgDate);
        });

        var stTime = '@ViewBag.StartTime';
        if (stTime == "07:00" || stTime == "08:45" || stTime == "10:30" || stTime == "12:30" || stTime == "14:15" || stTime == "16:00" || stTime == "18:45") {
            $('#Other').hide();
        } else {
            $('#Other').show();
            $('#startTime').val('Other');
            document.getElementById('Other').value = stTime;
        };
        checkInstructor();
        checkInstructorFree();
        
    });
    function checkInstructor() {
        var instructorUrl = '@Url.Action("GetInstructors")/' + '@ViewBag.Subject';

        $.getJSON(instructorUrl, function (instructors) {
            var html = "";
            $.each(instructors, function (index, instructor) {
                html += ('<option value="' + instructor.id + '" >' + instructor.name + '</option>');
            });
            $("#InstructorID").html(html);
            $("#InstructorID option[value=" + '@ViewBag.ID' + "]").attr('selected', true);
        });
    }
    function checkInstructorFree() {
        var sessionUrl = '@Url.Action("GetNumberOfSlot")/' + '@ViewBag.Subject';

        var beginDateSelect = document.getElementById('begindate').getAttribute('data-date');
        var endDateSelect;
        $.getJSON(sessionUrl, function (sub) {
            var i = (sub.session / sub.slot - (sub.session % sub.slot) / sub.slot);
            var day;
            if ((i % 5) == 0) {
                day = ((i / 5) * 7) - 1;
            } else {
                day = (((i - (i % 5)) + 1) * 7) - 1;
            }
            var tmp = beginDateSelect.split('-');
            var year = tmp[2];
            var month = tmp[1];
            var date = tmp[0];
            if (month < 10 && date < 10) {
                beginDateSelect = year + "-0" + month + "-0" + date;
            } else if (month >= 10 && date < 10) {
                beginDateSelect = year + "-" + month + "-0" + date;
            } else if (month < 10 && date >= 10) {
                beginDateSelect = year + "-0" + month + "-" + date;
            } else {
                beginDateSelect = year + "-" + month + "-" + date;
            }
            var tmp1 = new Date(year, month, date - (-day));
            var mth = tmp1.getMonth();
            var yr = tmp1.getFullYear();
            if (mth == 0) {
                mth = 12;
                yr--;
            }
            if (mth < 10) {
                endDateSelect = yr + "-0" + mth + "-" + tmp1.getDate();
            } else {
                endDateSelect = yr + "-" + mth + "-" + tmp1.getDate();
            }

            var insUrl = '@Url.Action("GetInstructorFree")/' + '@ViewBag.Subject';
            var starttime = $('#startTime :selected').attr("value");

            var test = starttime.split(':');
            var hour;
            var minutes;
            var endtime;

            if (sub.slot == 1) {
                hour = parseInt(test[0]) + 1;
                minutes = parseInt(test[1]) + 30;
                if (minutes >= 60) {
                    hour = hour + minutes / 60 - minutes % 60 / 60;
                    minutes = minutes % 60;
                }
                if (hour < 10) {
                    endtime = "0" + hour + ":" + minutes;
                } else {
                    endtime = hour + ":" + minutes;
                }
            } else if (sub.slot == 2) {
                hour = parseInt(test[0]) + 3;
                minutes = parseInt(test[1]) + 15;
                if (minutes >= 60) {
                    hour = hour + minutes / 60 - minutes % 60 / 60;
                    minutes = minutes % 60;
                }
                if (hour < 10) {
                    endtime = "0" + hour + ":" + minutes;
                } else {
                    endtime = hour + ":" + minutes;
                }
            }
            $.getJSON(insUrl, function (inss) {
                $.each(inss, function (index, ins) {
                    if (ins.begindate == beginDateSelect ||
                        endDateSelect == ins.enddate ||
                        (ins.begindate > beginDateSelect && ins.enddate < endDateSelect) ||
                        (ins.begindate < beginDateSelect && ins.enddate > endDateSelect) ||
                        (ins.begindate < beginDateSelect && ins.enddate > beginDateSelect) ||
                        (ins.begindate < endDateSelect && ins.enddate > endDateSelect)) {
                        if (ins.starttime == starttime ||
                           endtime == ins.endtime ||
                           (ins.starttime < starttime && ins.endtime > endtime) ||
                           (ins.starttime > starttime && ins.endtime < endtime) ||
                           (ins.starttime < starttime && ins.endtime > starttime) ||
                           (ins.starttime < endtime && ins.endtime > endtime)) {
                            $("#InstructorID option[value='" + ins.id + "']").remove();
                        }
                    }
                });
            });
        });
    };
</script>
